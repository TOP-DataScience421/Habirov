
import numpy as np
from scipy import stats

# Данные
N = np.array([223, 252, 322, 272, 333, 284, 372, 295, 415, 306])
R = np.array([376, 408, 379, 402, 381, 412, 396, 421, 395, 422, 393, 441, 402, 463])

# Подпись с номером варианта
print("Номер варианта: 1")  # Поставьте свой номер варианта

# Вывод вариационных рядов
print(f"N: {N}")
print(f"R: {R}")

# Функция для проверки нормальности данных
def check_normality(data):
    stat, p_value = stats.shapiro(data)
    return p_value

# Проверка нормальности
p_value_N = check_normality(N)
p_value_R = check_normality(R)

# Тест Шапиро-Уилка для проверки нормальности
alpha = 0.05  # Уровень значимости

# Проверка нормальности выборок
print("\nПроверка нормальности распределения:")

print(f"Для выборки N: p-значение = {p_value_N:.4f}")
if p_value_N > alpha:
    print("Выборка N следует нормальному распределению.")
else:
    print("Выборка N не следует нормальному распределению.")

print(f"Для выборки R: p-значение = {p_value_R:.4f}")
if p_value_R > alpha:
    print("Выборка R следует нормальному распределению.")
else:
    print("Выборка R не следует нормальному распределению.")

# Проверка гипотезы о принадлежности крайних членов вариационных рядов (критерий Граббса)
def grubbs_test(data):
    data_sorted = np.sort(data)
    n = len(data_sorted)
    G = max(
        (data_sorted[-1] - np.mean(data_sorted)) / np.std(data_sorted, ddof=1),
        (np.mean(data_sorted) - data_sorted[0]) / np.std(data_sorted, ddof=1)
    )
    return G

# Проверка крайних значений только если данные нормально распределены
if p_value_N > alpha:
    G_N = grubbs_test(N)
    print("\nПроверка крайних значений для выборки N (критерий Граббса):")
    print(f"Наблюдаемое значение G = {G_N:.4f}")
    # Критическое значение для G (может меняться в зависимости от таблицы)
    G_critical = 1.96  # Примерное критическое значение для уровня значимости 0.05
    print(f"Критическое значение G = {G_critical:.4f}")
    if G_N > G_critical:
        print("Найдены выбросы в выборке N.")
    else:
        print("Выбросов в выборке N не обнаружено.")

if p_value_R > alpha:
    G_R = grubbs_test(R)
    print("\nПроверка крайних значений для выборки R (критерий Граббса):")
    print(f"Наблюдаемое значение G = {G_R:.4f}")
    # Критическое значение для G (может меняться в зависимости от таблицы)
    G_critical = 1.96  # Примерное критическое значение для уровня значимости 0.05
    print(f"Критическое значение G = {G_critical:.4f}")
    if G_R > G_critical:
        print("Найдены выбросы в выборке R.")
    else:
        print("Выбросов в выборке R не обнаружено.")


# Номер варианта: 1
# N: [223 252 322 272 333 284 372 295 415 306]
# R: [376 408 379 402 381 412 396 421 395 422 393 441 402 463]

# Проверка нормальности распределения:
# Для выборки N: p-значение = 0.9589
# Выборка N следует нормальному распределению.
# Для выборки R: p-значение = 0.2882
# Выборка R следует нормальному распределению.

# Проверка крайних значений для выборки N (критерий Граббса):
# Наблюдаемое значение G = 1.9032
# Критическое значение G = 1.9600
# Выбросов в выборке N не обнаружено.

# Проверка крайних значений для выборки R (критерий Граббса):
# Наблюдаемое значение G = 2.3264
# Критическое значение G = 1.9600
# Найдены выбросы в выборке R.